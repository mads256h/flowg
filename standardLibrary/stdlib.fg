/*
Indsæt resten af defaultværdier
*/
number filamentDiameter = 2.85;
number nozzleDiameter = 0.4;
number layerHeight = 0.1;
number pi = 3.14159265358979323846264338327950288419716939937510582097494459;
point currentPosition = [0,0,0];

void lline(point endpoint){
    number x = currentPosition.x - endpoint.x;
    number y = currentPosition.y - endpoint.y;
    number z = currentPosition.z - endpoint.z;

    number x2 = x^2;
    number y2 = y^2;
    number z2 = z^2;

    number distance = sqrt(x2+y2+z2);
    number filamentVolumeNeeded = distance * nozzleDiameter * layerHeight;
    number filamentArea = (filamentDiameter / 2)^2 * pi;
    number filamentMm = filamentVolumeNeeded / filamentArea;
    gcode gcodeLine(point currentPosition, point endpoint, number filament){
    	G1 E[filament] X[endpoint.x] Y[endpoint.y] Z[endpoint.z]
    };
    gcodeLine(currentPosition, endpoint, filamentMm);
    currentPosition = endpoint;
};

gcode gcodeMove(point endPoint){
    G0 X[endPoint.x] Y[endPoint.y] Z[endPoint.z]
};

void mmove(point endPoint){
    gcodeMove(endPoint);
};

point arc(point center, point wantedEndpoint){
    _arc(center, wantedEndpoint, true);
};

point cArc(point center, point wantedEndpoint){
    _arc(center, wantedEndpoint, false);
};

point _arc(point center, point wantedEndpoint, bool is_cw){
    number i = center.x - currentPosition.x;
    number j = center.y - currentPosition.y;
    point vector = wantedEndpoint - center;
    point normalizedVector = [vector.x / sqrt(vector.x^2 + vector.y^2),vector.y / sqrt(vector.x^2 + vector.y^2),0];
    number radius = sqrt((center.x - currentPosition.x)^2 + (center.y - currentPosition.y)^2);
    point realEndpoint = (normalizedVector * radius) + center;

    if (is_cw) {
        gcode gcodeCArc(point endpoint, number i, number j){
            G2 X[endpoint.x] Y[endpoint.y] I[i] J[j]
        };
        gcodeCArc(realEndpoint, i, j);
    } else {
        gcode gcodeCWArc(point endpoint, number i, number j){
            G3 X[endpoint.x] Y[endpoint.y] I[i] J[j]
        };
        gcodeCWArc(realEndpoint, i, j);
    };
    currentPosition = realEndpoint;
    return currentPosition;
};
